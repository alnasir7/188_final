name: Cypress Tests

on: [push]

env:
  JWT_SECRET: ${{ secrets.JWT_SECRET }}

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - name: setenv
        run: export JWT_SECRET=${{ secrets.JWT_SECRET }}
      - name: set-connection-string
        run: export DB_CONNECTION_STRING=${{ secrets.DB_CONNECTION_STRING }}
      - name: Cypress run
        uses: cypress-io/github-action@v4.2.2 # use the explicit version number
        with:
          build: npm run build
          start: npm start

  build:
    # Name the Job
    name: Build and publish docker image
    # Set the type of machine to run on
    runs-on: ubuntu-latest
    needs: cypress-run
    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      # TODO: build and publish docker images
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push fastapi
        uses: docker/build-push-action@v3
        with:
          context: project
          file: Dockerfile
          push: true
          tags: ghcr.io/cis188/project/project:${{ github.sha }}

  deploy:
    name: Deploy latest version of code
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # TODO: deploy to AWS
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: get config
        run: |
          aws eks --region us-east-1 update-kubeconfig --name cis188 --role-arn arn:aws:iam::751852120204:role/alnasir7 --alias cis188
